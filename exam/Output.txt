---------------------------------------
Exam project LU Decomposition (index 15 pr. spreadsheet)
 Christian Overby
Pivoting LU decomposition testing the implemented functions:
---------------------------------------


Doing one testLUdecomp verbose test:
---------------------------------------
Randomized 6x6 matrix A: 
0 5 5 7 2 3 
1 0 9 1 0 9 
9 3 1 6 3 2 
0 3 9 4 1 1 
9 4 6 0 2 8 
6 9 0 9 7 1 

Pivoted matrix A: 
9 3 1 6 3 2 
6 9 0 9 7 1 
0 3 9 4 1 1 
0 5 5 7 2 3 
9 4 6 0 2 8 
1 0 9 1 0 9 

U 
9 3 1 6 3 2 
0 7 -0.6667 5 5 -0.3333 
0 0 9.286 1.857 -1.143 1.143 
0 0 0 2.333 -0.8974 2.564 
0 0 0 0 -4.062 13.92 
0 0 0 0 0 10.82 

U is upper triangular?    True

L 
1 0 0 0 0 0 
0.6667 1 0 0 0 0 
0 0.4286 1 0 0 0 
0 0.7143 0.5897 1 0 0 
1 0.1429 0.5487 -3.314 1 0 
0.1111 -0.04762 0.9538 -0.5143 -0.1313 1 

L is lower triangular?    True

L*U = A_pivoted
L*U: 
9 3 1 6 3 2 
6 9 0 9 7 1 
0 3 9 4 1 1 
0 5 5 7 2 3 
9 4 6 8.882e-16 2 8 
1 0 9 1 0 9 

A_pivoted: 
9 3 1 6 3 2 
6 9 0 9 7 1 
0 3 9 4 1 1 
0 5 5 7 2 3 
9 4 6 0 2 8 
1 0 9 1 0 9 

L*U = A? (Aprroximate)   True
---------------------------------------
testLUdecomp passed succesufully

Doing one testLUsolve verbose test:
---------------------------------------
Randomized 18x18 matrix: 
5 3 8 4 2 1 4 6 9 9 6 3 5 7 6 1 7 1 
7 6 7 7 8 7 9 9 5 7 7 2 7 4 6 6 4 8 
7 8 6 7 4 3 6 2 9 5 5 3 6 2 9 7 8 5 
2 6 5 9 4 9 2 1 8 6 5 6 5 3 9 2 2 7 
6 5 4 7 9 4 4 1 3 1 4 7 2 6 5 3 5 6 
3 7 7 2 1 4 1 8 2 2 5 8 1 8 4 1 8 7 
3 1 3 9 6 5 7 6 1 2 7 2 4 6 1 5 6 3 
4 1 5 3 5 6 5 2 7 9 2 5 1 2 8 3 9 1 
2 3 1 4 1 7 6 3 4 1 8 8 5 2 4 8 9 6 
9 5 9 1 1 3 7 8 3 9 3 6 1 7 6 3 7 1 
6 9 7 9 4 5 2 9 2 8 2 9 1 1 8 6 7 7 
1 9 5 4 9 1 6 5 4 9 7 6 3 8 7 5 6 8 
3 1 6 1 6 8 6 6 1 3 1 3 6 6 3 7 8 7 
3 9 1 5 6 7 7 2 8 1 7 7 8 3 5 9 2 1 
1 8 5 9 6 5 2 2 8 2 8 6 3 6 8 6 4 1 
6 5 4 2 7 7 7 5 2 3 9 8 6 8 4 6 1 7 
3 2 2 7 6 1 3 1 3 1 8 8 5 8 5 3 6 9 
8 9 1 1 2 2 3 6 1 4 9 7 1 3 7 5 6 1 

A = 
5 3 8 4 2 1 4 6 9 9 6 3 5 7 6 1 7 1 
7 6 7 7 8 7 9 9 5 7 7 2 7 4 6 6 4 8 
7 8 6 7 4 3 6 2 9 5 5 3 6 2 9 7 8 5 
2 6 5 9 4 9 2 1 8 6 5 6 5 3 9 2 2 7 
6 5 4 7 9 4 4 1 3 1 4 7 2 6 5 3 5 6 
3 7 7 2 1 4 1 8 2 2 5 8 1 8 4 1 8 7 
3 1 3 9 6 5 7 6 1 2 7 2 4 6 1 5 6 3 
4 1 5 3 5 6 5 2 7 9 2 5 1 2 8 3 9 1 
2 3 1 4 1 7 6 3 4 1 8 8 5 2 4 8 9 6 
9 5 9 1 1 3 7 8 3 9 3 6 1 7 6 3 7 1 
6 9 7 9 4 5 2 9 2 8 2 9 1 1 8 6 7 7 
1 9 5 4 9 1 6 5 4 9 7 6 3 8 7 5 6 8 
3 1 6 1 6 8 6 6 1 3 1 3 6 6 3 7 8 7 
3 9 1 5 6 7 7 2 8 1 7 7 8 3 5 9 2 1 
1 8 5 9 6 5 2 2 8 2 8 6 3 6 8 6 4 1 
6 5 4 2 7 7 7 5 2 3 9 8 6 8 4 6 1 7 
3 2 2 7 6 1 3 1 3 1 8 8 5 8 5 3 6 9 
8 9 1 1 2 2 3 6 1 4 9 7 1 3 7 5 6 1 

Solve for vector b = 
15 93 35 86 92 49 21 62 27 90 59 63 26 40 26 72 36 11
Solution x = 
-49.26 16.43 115.9 -6.639 29.27 -15.07 46.39 -39.58 -99.05 -22.68 41.15 43.06 84.95 -85.25 31.64 -78.73 21.31 -49.01
A*x = 
15 93 35 86 92 49 21 62 27 90 59 63 26 40 26 72 36 11
---------------------------------------
testLUsolve passed succesufully

Doing one testLUinverse verbose test:
---------------------------------------
Randomized 8x8 matrix: 
2 0 3 1 0 5 8 4 
5 9 3 4 6 2 3 5 
5 6 4 7 2 1 6 9 
9 7 5 6 0 2 0 2 
7 2 7 4 8 9 9 5 
9 3 3 8 7 4 9 1 
5 0 7 2 5 0 1 3 
9 0 6 9 4 2 4 0 

 Matrix inv = 
-0.2697 -0.4577 0.1518 0.2674 0.1188 0.3664 0.1686 -0.4789 
0.2115 0.3102 -0.1475 -0.04072 -0.1465 -0.1095 -0.04855 0.1537 
0.3703 0.3958 -0.2221 -0.1367 -0.1941 -0.2949 0.02572 0.3895 
-0.01555 0.1296 0.03389 -0.1212 0.01705 -0.1854 -0.1829 0.3075 
-0.1266 0.01926 0.008745 -0.06949 0.06854 0.04118 0.02883 -0.02844 
-0.1214 -0.07153 0.02374 0.04828 0.2187 -0.09136 -0.1564 0.01339 
0.2736 0.1609 -0.1053 -0.07867 -0.1925 0.03964 0.04287 0.07319 
-0.2844 -0.3329 0.2631 0.0961 0.1934 0.1193 0.05188 -0.2927 

matrix_inv*matrix (approximate) = 
1 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 
0 0 0 1 0 0 0 0 
0 0 0 0 1 0 0 0 
0 0 0 0 0 1 0 0 
0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 1 

---------------------------------------
testQRGSinverse passed succesufully
---------------------------------------
Time count for QR-decomposition can be seen in plot.benchmark.svg
QR decomp is approximately 2 times slower
