---------------------------------------
Pivoting LU decomposition testing the implemented functions:
---------------------------------------


Doing one testLUdecomp verbose test:
---------------------------------------
Randomized 6x6 matrix A: 
6 6 7 5 0 1 
0 6 2 6 6 5 
1 2 7 7 6 7 
7 4 7 2 9 7 
3 0 0 2 7 8 
2 7 8 0 7 8 

Pivoted matrix A: 
7 4 7 2 9 7 
2 7 8 0 7 8 
1 2 7 7 6 7 
0 6 2 6 6 5 
3 0 0 2 7 8 
6 6 7 5 0 1 

U 
7 4 7 2 9 7 
0 5.857 6 -0.5714 4.429 6 
0 0 4.537 6.854 3.634 4.537 
0 0 0 12.85 4.785 3 
0 0 0 0 4.372 7.333 
0 0 0 0 0 10.35 

U is upper triangular?    True

L 
1 0 0 0 0 0 
0.2857 1 0 0 0 0 
0.1429 0.2439 1 0 0 0 
0 1.024 -0.914 1 0 0 
0.4286 -0.2927 -0.2742 0.2222 1 0 
0.8571 0.439 -0.3602 0.4674 -2.421 1 

L is lower triangular?    True

L*U = A_pivoted
L*U: 
7 4 7 2 9 7 
2 7 8 0 7 8 
1 2 7 7 6 7 
0 6 2 6 6 5 
3 -2.22e-16 0 2 7 8 
6 6 7 5 0 1 

A_pivoted: 
7 4 7 2 9 7 
2 7 8 0 7 8 
1 2 7 7 6 7 
0 6 2 6 6 5 
3 0 0 2 7 8 
6 6 7 5 0 1 

L*U = A? (Aprroximate)   True
---------------------------------------
testLUdecomp passed succesufully

Doing one testLUsolve verbose test:
---------------------------------------
Randomized 18x18 matrix: 
9 4 8 6 9 8 8 2 1 9 8 6 7 4 7 5 2 9 
4 8 9 9 5 2 9 1 9 3 7 6 5 6 2 7 8 2 
3 3 3 7 8 9 3 4 8 1 2 6 9 2 1 8 2 7 
7 5 4 6 5 5 5 1 3 3 5 4 7 7 9 3 3 6 
4 7 2 9 2 8 9 7 8 3 8 1 8 9 4 1 9 8 
8 1 6 8 2 7 6 3 6 5 9 2 6 4 7 1 1 1 
8 1 3 4 6 1 6 9 9 4 7 6 3 9 7 6 1 8 
8 2 2 4 7 9 4 2 3 2 5 7 8 9 5 2 7 1 
8 5 9 8 3 5 2 7 5 3 2 3 1 3 1 1 7 8 
6 2 6 2 8 9 9 8 9 2 5 8 2 4 2 9 5 5 
7 3 4 2 5 7 4 5 6 2 4 9 3 4 5 8 6 5 
3 9 9 7 6 2 6 8 5 5 4 3 1 6 8 9 3 4 
8 9 5 1 7 9 8 1 9 1 2 1 6 4 1 5 3 7 
9 1 7 7 1 4 8 9 9 3 5 7 1 2 6 9 4 9 
8 9 7 3 6 8 2 9 6 9 7 7 5 8 4 7 4 1 
6 3 5 5 2 1 4 8 8 4 1 9 9 4 4 9 3 1 
2 7 1 3 3 2 1 4 5 6 3 9 3 7 9 7 4 3 
6 5 5 5 1 5 4 9 5 5 9 8 2 2 5 6 7 9 

A = 
9 4 8 6 9 8 8 2 1 9 8 6 7 4 7 5 2 9 
4 8 9 9 5 2 9 1 9 3 7 6 5 6 2 7 8 2 
3 3 3 7 8 9 3 4 8 1 2 6 9 2 1 8 2 7 
7 5 4 6 5 5 5 1 3 3 5 4 7 7 9 3 3 6 
4 7 2 9 2 8 9 7 8 3 8 1 8 9 4 1 9 8 
8 1 6 8 2 7 6 3 6 5 9 2 6 4 7 1 1 1 
8 1 3 4 6 1 6 9 9 4 7 6 3 9 7 6 1 8 
8 2 2 4 7 9 4 2 3 2 5 7 8 9 5 2 7 1 
8 5 9 8 3 5 2 7 5 3 2 3 1 3 1 1 7 8 
6 2 6 2 8 9 9 8 9 2 5 8 2 4 2 9 5 5 
7 3 4 2 5 7 4 5 6 2 4 9 3 4 5 8 6 5 
3 9 9 7 6 2 6 8 5 5 4 3 1 6 8 9 3 4 
8 9 5 1 7 9 8 1 9 1 2 1 6 4 1 5 3 7 
9 1 7 7 1 4 8 9 9 3 5 7 1 2 6 9 4 9 
8 9 7 3 6 8 2 9 6 9 7 7 5 8 4 7 4 1 
6 3 5 5 2 1 4 8 8 4 1 9 9 4 4 9 3 1 
2 7 1 3 3 2 1 4 5 6 3 9 3 7 9 7 4 3 
6 5 5 5 1 5 4 9 5 5 9 8 2 2 5 6 7 9 

Solve for vector b = 
15 93 35 86 92 49 21 62 27 90 59 63 26 40 26 72 36 11
Solution x = 
-29.52 -13.85 44.56 -19.85 -25.79 13.94 -1.765 -5.646 0.693 -13.82 -1.228 8.658 12.78 31.24 3.685 -1.712 -7.116 12.09
A*x = 
15 93 35 86 92 49 21 62 27 90 59 63 26 40 26 72 36 11
---------------------------------------
testLUsolve passed succesufully

Doing one testLUinverse verbose test:
---------------------------------------
Randomized 8x8 matrix: 
7 5 1 2 0 0 5 8 
3 5 8 1 0 2 8 0 
9 2 3 4 4 1 8 8 
4 0 0 1 8 3 8 9 
8 2 5 9 9 2 5 3 
4 8 3 4 0 5 5 7 
0 4 8 1 9 3 9 6 
5 2 7 9 8 1 6 2 

 Matrix inv = 
-0.02232 0.03199 0.11 -0.08147 0.2221 -0.03762 0.02014 -0.246 
0.3497 0.1182 -0.4632 0.1354 0.1356 -0.06115 -0.04725 -0.003228 
-0.2697 -0.1429 0.4663 -0.3434 -0.008293 0.06329 0.2295 -0.1386 
-0.009293 -0.03576 -0.03944 0.06339 -0.1837 0.06862 -0.1162 0.2937 
0.1385 0.02332 -0.2207 0.0745 0.1828 -0.08951 0.04121 -0.09118 
-0.3374 -0.01919 0.2362 -0.05217 0.1025 0.1786 0.0224 -0.2065 
0.145 0.1913 -0.2722 0.2945 -0.1624 -0.06419 -0.1986 0.2478 
-0.1286 -0.1946 0.3149 -0.1703 -0.1306 0.08619 0.1364 0.006329 

matrix_inv*matrix (approximate) = 
1 0 0 0 0 0 0 0 
0 1 0 0 0 0 0 0 
0 0 1 0 0 0 0 0 
0 0 0 1 0 0 0 0 
0 0 0 0 1 0 0 0 
0 0 0 0 0 1 0 0 
0 0 0 0 0 0 1 0 
0 0 0 0 0 0 0 1 

---------------------------------------
testQRGSinverse passed succesufully
---------------------------------------
Time count for QR-decomposition can be seen in plot.benchmark.svg
QR decomp is approximately 2 times slower
